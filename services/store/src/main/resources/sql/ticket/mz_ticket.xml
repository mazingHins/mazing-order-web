<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<!-- 这里namespace必须是接口的路径，不然要运行的时候要报错 “is not known to the MapperRegistry” -->
<mapper namespace="com.mazing.services.store.ticket.dao.TicketDao">

	<!-- 新增 -->
	<insert id="save" parameterType="com.mazing.services.store.ticket.entry.TicketPO"
		useGeneratedKeys="false">
		insert into mz_merchant.mz_ticket
		(ticket_id,ticket_rule_id,uid,ticket_no,ticket_name,ticket_en_name,price,original_price,status,description,is_enable,order_no,store_id,act_id,start_day,end_day,start_time,end_time,create_time,batch_no,transfer_status,third_ticket_no,is_third,third_code,check_uid,add_time,
		use_time,is_expire_notified) values
		(#{ticketId},#{ticketRuleId},#{uid},#{ticketNo},#{ticketName},#{ticketEnName},#{price},#{originalPrice},#{status},#{description},#{isEnable},#{orderNo},#{storeId},#{actId},#{startDay},#{endDay},#{startTime},#{endTime},#{createTime},#{batchNo},#{transferStatus},#{thirdTicketNo},#{isThird},#{thirdCode},#{checkUid},#{addTime},#{useTime},#{isExpireNotified})
	</insert>

	<!-- 根据主键，删除数据 <delete id="deleteById" parameterType="Map"> DELETE FROM 
		mz_merchant.mz_ticket WHERE ticket_id=#{param1} </delete> -->

	<!-- 更新 -->
	<update id="update" parameterType="com.mazing.services.store.ticket.entry.TicketPO">
		update mz_merchant.mz_ticket
		set
		uid=#{uid},ticket_no=#{ticketNo},ticket_name=#{ticketName},ticket_en_name=#{ticketEnName},price=#{price},original_price=#{originalPrice},status=#{status},description=#{description},is_enable=#{isEnable},order_no=#{orderNo},store_id=#{storeId},act_id=#{actId},start_day=#{startDay},end_day=#{endDay},start_time=#{startTime},end_time=#{endTime},batch_no=#{batchNo},transfer_status=#{transferStatus},third_ticket_no=#{thirdTicketNo},is_third=#{isThird},third_code=#{thirdCode},check_uid=#{checkUid},add_time=#{add_time},use_time=#{use_time},is_expire_notified=#{isExpireNotified}
		where ticket_id=#{ticketId}
	</update>

	<!-- 根据主键读取记录（主键可能有多个） -->
	<select id="getById" parameterType="Map"
		resultType="com.mazing.services.store.ticket.entry.TicketPO">
		SELECT * FROM mz_merchant.mz_ticket WHERE
		ticket_id=#{param1}
	</select>

	<select id="getByTicketNo" parameterType="Map"
		resultType="com.mazing.services.store.ticket.entry.TicketPO">
		SELECT * FROM mz_merchant.mz_ticket WHERE
		ticket_no=#{ticketNo}
	</select>

	<!-- 查询全部记录 -->
	<select id="listAll" resultType="com.mazing.services.store.ticket.entry.TicketPO">
		SELECT * FROM
		mz_merchant.mz_ticket
	</select>


	<!-- 获取用户ticket列表,不包括删除的、预购买的 -->
	<select id="pageUserTickets" parameterType="Map"
		resultType="com.mazing.services.store.ticket.entry.TicketPO">
		SELECT * FROM mz_merchant.mz_ticket where uid=#{uid} AND 
		<![CDATA[ 
					status>1
		]]>

		order by status ASC, end_time DESC , add_time DESC LIMIT
		#{offset},#{rows}
	</select>

	<!-- 核销 活动票 -->
	<update id="checkoutTicket" parameterType="Map">
		update
		mz_merchant.mz_ticket set status=#{newStatus},
		use_time=NOW(),check_uid=#{checkUid} where
		ticket_id=#{ticketId} AND
		status=#{oldStatus}
	</update>

	<!-- 更新票状态 -->
	<update id="updateStatusByTicketId" parameterType="Map">
		update
		mz_merchant.mz_ticket set status=#{newStatus} where
		ticket_id=#{ticketId} AND
		status=#{oldStatus}
	</update>


	<!-- 根据日期范围查询已核销ticket -->
	<select id="listCheckedTicketsByCheckedTimeRange" parameterType="Map"
		resultType="com.mazing.services.store.ticket.entry.TicketPO">
		SELECT * FROM mz_merchant.mz_ticket WHERE store_id=#{storeId} AND
		status=4 AND
		<![CDATA[ 
					use_time<#{endDay} AND use_time>#{startDay} 
		]]>
		limit #{offset},#{rows}

	</select>
	<!-- 根据日期范围查询用户已过期ticket -->
	<select id="listExpiredTicketsByTimeRange" parameterType="Map"
		resultType="com.mazing.services.store.ticket.entry.TicketPO">
		
		SELECT * FROM mz_merchant.mz_ticket WHERE status=#{status} 
		AND end_time between #{startDay} AND #{endDay} 
		AND is_expire_notified = 0

	</select>

	<!-- 修改过期通知状态为已通知 -->
	<update id="updateExpireNotified" parameterType="Map">
		update
		mz_merchant.mz_ticket set is_expire_notified=1 where ticket_id=#{ticketId}
	</update>

	


	<select id="countAndSumChecked" parameterType="Map"
		resultType="com.mazing.services.store.ticket.entry.TicketPO">
		SELECT count(*) as batch_no, sum(price) as original_price FROM
		mz_merchant.mz_ticket WHERE store_id=#{storeId} AND
		status=4 AND
		<![CDATA[ 
					use_time<#{endDay} AND use_time>#{startDay} 
		]]>

	</select>



	<select id="listOrderTickets" parameterType="Map"
		resultType="com.mazing.services.store.ticket.entry.TicketPO">
		SELECT * FROM mz_merchant.mz_ticket WHERE
		order_no=#{orderNo} order by add_time asc
	</select>

	<select id="pageByStatus" parameterType="Map"
		resultType="com.mazing.services.store.ticket.entry.TicketPO">
		SELECT * FROM mz_merchant.mz_ticket where
		ticket_rule_id=#{ticketRuleId} AND status=#{status} limit
		#{offset},#{rows}
	</select>


	<update id="batchUpdateTicket" parameterType="Map">
		update
		mz_merchant.mz_ticket set order_no=#{orderNo},
		store_id=#{storeId}, act_id=#{actId}, uid=#{uid}, status=#{toStatus},
		add_time=NOW()
		where ticket_id
		IN (
		<foreach collection="ticketIds" item="item" index="index"
			separator=",">
			${item}
		</foreach>
		)
	</update>


	<update id="updateTicketStatus" parameterType="Map">
		update
		mz_merchant.mz_ticket set status=#{newStatus}
		where order_no=#{orderNo}
		AND uid=#{uid} AND status=#{oldStatus}
	</update>



	<!-- 获取订单下的所有票 -->
	<select id="listByOrderNo" parameterType="Map"
		resultType="com.mazing.services.store.ticket.entry.TicketPO">
		SELECT * FROM mz_merchant.mz_ticket where
		order_no=#{orderNo}
	</select>

</mapper>
