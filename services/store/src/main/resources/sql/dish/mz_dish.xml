<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<!-- 这里namespace必须是接口的路径，不然要运行的时候要报错 “is not known to the MapperRegistry” -->
<mapper namespace="com.mazing.services.store.dish.dao.DishDao">
	
	<!-- 获取全部美食信息 -->
	<select id="listByPage" resultType="com.mazing.services.store.dish.entry.DishPO">
		SELECT * from mz_merchant.mz_dish ORDER BY dish_key ASC LIMIT #{offset},#{pageSize}
	</select>

	<!-- 新增 -->
	<insert id="save" parameterType="com.mazing.services.store.dish.entry.DishPO" useGeneratedKeys="false" >
		insert into mz_merchant.mz_dish (dish_id,dish_name,dish_name_en,dish_key,store_id,store_name,status,currency_type,category_id,promote_tag,expiry_time,original_price,price,daily_num,special_content,content,advance_minute,fav_count,fav_img,card_img,topic_img,order_img,spec,sequence,create_time,default_spec_key,spec_label) values (#{dishId},#{dishName},#{dishNameEn},#{dishKey},#{storeId},#{storeName},#{status},#{currencyType},#{categoryId},#{promoteTag},#{expiryTime},#{originalPrice},#{price},#{dailyNum},#{specialContent},#{content},#{advanceMinute},#{favCount},#{favImg},#{cardImg},#{topicImg},#{orderImg},#{spec},#{sequence},#{createTime},#{defaultSpecKey},#{specLabel})
	</insert>

	<!-- 根据主键，删除数据 -->
	<delete id="deleteById" parameterType="Map">
		DELETE FROM mz_merchant.mz_dish WHERE dish_id=#{dishId}
	</delete>

	<!-- 更新 -->
	<update id="update" parameterType="com.mazing.services.store.dish.entry.DishPO">
		update mz_merchant.mz_dish set dish_name=#{dishName},dish_name_en=#{dishNameEn},dish_key=#{dishKey},store_id=#{storeId},store_name=#{storeName},status=#{status},currency_type=#{currencyType},category_id=#{categoryId},promote_tag=#{promoteTag},expiry_time=#{expiryTime},original_price=#{originalPrice},price=#{price},daily_num=#{dailyNum},special_content=#{specialContent},content=#{content},advance_minute=#{advanceMinute},fav_img=#{favImg},card_img=#{cardImg},topic_img=#{topicImg},order_img=#{orderImg},spec=#{spec},sequence=#{sequence},default_spec_key=#{defaultSpecKey},spec_label=#{specLabel} where dish_id=#{dishId}
	</update>

	<!-- 根据主键读取记录（主键可能有多个） -->
	<select id="getById" parameterType="Map" resultType="com.mazing.services.store.dish.entry.DishPO">
		SELECT * FROM mz_merchant.mz_dish WHERE dish_id=#{dishId}
	</select>
	
	<!-- 根据dishKey读取记录 -->
	<select id="getByDishKey" parameterType="Map" resultType="com.mazing.services.store.dish.entry.DishPO">
		SELECT * FROM mz_merchant.mz_dish WHERE dish_key=#{dishKey}
	</select>
	
	<!-- 查询门店下的全部菜品记录 -->
	<select id="queryByStoreId" resultType="com.mazing.services.store.dish.entry.DishPO">
		SELECT * FROM mz_merchant.mz_dish WHERE store_id = #{storeId} ORDER BY sequence ASC
	</select>
	
	<!-- 查询门店下的菜品记录(区分上下架) hins 2015/10/9 更新排序方式 -->
	<select id="queryByStoreIdAndStatus" resultType="com.mazing.services.store.dish.entry.DishPO">
		SELECT * FROM mz_merchant.mz_dish WHERE store_id = #{storeId} and status = #{status} ORDER BY sequence ASC
	</select>

	<!-- 查询门店下的菜品记录，按照更新时间从大到小排序 -->
	<select id="queryByStoreIdAndStatusODUpdateTime" resultType="com.mazing.services.store.dish.entry.DishPO">
		SELECT * FROM mz_merchant.mz_dish WHERE store_id = #{storeId} and status = #{status} ORDER BY create_time DESC
	</select>
	
	<!-- 更改收藏数，收藏或者取消收藏，一次只+-1 -->
	<update id="updateFavNum">
		update mz_merchant.mz_dish set fav_count=<if test="fav">fav_count+1</if><if test="!(fav)">fav_count-1</if> where dish_key=#{dishKey}
		<if test="!(fav)"> AND fav_count>0</if>
	</update>

	<!-- 指定门店下，全部菜品冗余的门店名称 -->
	<update id="updateStoreName">
		update mz_merchant.mz_dish set store_name=#{storeName} where store_id=#{storeId}
	</update>

	<!-- 查询菜品ID列表对应的菜品记录 -->
	<select id="queryByIds" resultType="com.mazing.services.store.dish.entry.DishPO">
		SELECT * FROM mz_merchant.mz_dish WHERE dish_id IN (
			<foreach collection="dishIds" item="item" index="index" separator="," >#{item,jdbcType=BIGINT}</foreach>
		)
	</select>
	
	<!-- 设置某个菜品需要提前多少分钟下单 ten 2015/8/20 -->
	<update id="updateAdvanceMinute" parameterType="Map">
		UPDATE mz_merchant.mz_dish set advance_minute=#{minute} where dish_id=#{dishId}
	</update>

	<!-- 统计菜品上架数量 -->
	<select id="countDishOnNum" resultType="java.lang.Integer">
		SELECT count(*) FROM mz_merchant.mz_dish where store_id=#{storeId} and status=#{status}
	</select>
	
	<!-- 统计门店下所有菜品的数量 -->
	<select id="countDish" resultType="java.lang.Integer">
		SELECT count(*) FROM mz_merchant.mz_dish where store_id=#{storeId} 
	</select>

	<!-- 更新菜品每日的供应量 ten 2015/8/21 -->
	<update id="updateDailyNum" parameterType="Map">
		UPDATE mz_merchant.mz_dish set daily_num=#{newNum} where dish_id=#{dishId} and daily_num=#{oldNum}
	</update>
	
	<!-- 更新菜品的上下架状态 Felix 2015/8/27 -->
	<update id="updateStatus" parameterType="Map">
		UPDATE mz_merchant.mz_dish set status=#{status}, sequence=#{sequence} where dish_id=#{dishId}
	</update>
	
	<!-- 增加菜品的排序大小：门店下sequence区间的菜品排序大小加1， Hins 2015/8/27 -->
	<update id="addStoreSequence" parameterType="Map">
		UPDATE mz_merchant.mz_dish set sequence=sequence+1 where store_id=#{storeId} and sequence between #{start} and #{end}
	</update>
	
	<!-- 减少菜品的排序大小：门店下sequence区间的菜品排序大小减1， Hins 2015/8/27 -->
	<update id="reduceStoreSequence" parameterType="Map">
		UPDATE mz_merchant.mz_dish set sequence=sequence-1 where store_id=#{storeId} and status=#{status} and sequence between #{start} and #{end}
	</update>
	
	<!-- 修改菜品的排序大小， Hins 2015/8/28 -->
	<update id="updateSequence" parameterType="Map">
		UPDATE mz_merchant.mz_dish set sequence=#{sequence} where dish_id=#{dishId}
	</update>
	
	<!-- 下架菜品，减少比当前菜品位置更大的排序， Hins 2015/8/28 -->
	<update id="moveStoreSequenceOff" parameterType="Map">
		UPDATE mz_merchant.mz_dish set sequence=sequence-1 where store_id=#{storeId} and sequence > #{sequence} 
	</update>
	
	<!-- 查询orderImg字段为空的美食 -->
	<select id="queryByEmptyOrderImg" resultType="com.mazing.services.store.dish.entry.DishPO">
		SELECT * FROM mz_merchant.mz_dish WHERE order_img='' ORDER BY create_time DESC LIMIT #{offset},#{pageSize}
	</select>
	
	<!-- 统计菜品上架数量 -->
	<select id="countByEmptyOrderImg" resultType="java.lang.Integer">
		SELECT count(*) FROM mz_merchant.mz_dish WHERE order_img=''
	</select>
	
	<!-- 修改美食orderImg -->
	<update id="updateOrderImg" parameterType="Map">
		UPDATE mz_merchant.mz_dish set order_img=#{orderImg} where dish_key=#{dishKey}
	</update>
	
	<!-- 获取门店内最大的美食排序值 -->
	<select id="getMaxSeqByStoreId" parameterType="Map" resultType="java.lang.Integer">
		SELECT MAX(sequence) FROM mz_merchant.mz_dish WHERE store_id=#{storeId} GROUP BY store_id
	</select>
	
	<!-- 获取餐厅内指定状态下的指定排序值的美食 -->
	<select id="getByStatusAndSeq" parameterType="Map" resultType="com.mazing.services.store.dish.entry.DishPO">
		SELECT * FROM mz_merchant.mz_dish WHERE store_id=#{storeId} AND status=#{status} AND sequence=#{sequence}
	</select>
	
	<!-- 更新门店内美食的排序, 将大于某个排序值的美食往下偏移一位 -->
	<update id="lowerMoveSeq" parameterType="Map">
		UPDATE mz_merchant.mz_dish SET sequence = sequence + 1 WHERE 
			store_id=#{storeId} 
			AND status IN (<foreach collection="status" item="item" index="index" separator="," >#{item}</foreach>)
			AND sequence>=#{sequence}
	</update>
	
	<select id="listByIds" resultType="com.mazing.services.store.dish.entry.DishPO">
		SELECT * FROM mz_merchant.mz_dish WHERE dish_id IN (<foreach collection="dishIds" item="item" index="index" separator="," >#{item}</foreach>)
	</select>
	
	<update id="updateSequenceByBatch" parameterType="Map">
		UPDATE mz_merchant.mz_dish
		<trim prefix="set" suffix="end">
		<trim prefix="sequence = case dish_id" suffix="">
			<foreach collection="list" item="i" index="index">
                   when #{i.dishId} then #{i.sequence}
            </foreach>
        </trim>
		</trim>
		where store_id=#{storeId} and 
		<foreach collection="list" separator="or" item="i" index="index" >
              dish_id=#{i.dishId}
        </foreach>
	</update>
	
</mapper>
