<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<!-- 这里namespace必须是接口的路径，不然要运行的时候要报错 “is not known to the MapperRegistry” -->
<mapper namespace="com.mazing.services.order.express.dao.ThirdExpressBaseDao">

	<!-- 新增 -->
	<insert id="save" parameterType="com.mazing.services.order.express.entry.ThirdExpressBasePO" useGeneratedKeys="false" >
		insert into mz_order.mz_third_express_base (express_id,order_id,order_no,third_order_no,express_code,uid,store_id,express_status,total_fee,actual_fee,total_delivery_fee,currency_type,create_time,update_time,finish_time) values (#{expressId},#{orderId},#{orderNo},#{thirdOrderNo},#{expressCode},#{uid},#{storeId},#{expressStatus},#{totalFee},#{actualFee},#{totalDeliveryFee},#{currencyType},#{createTime},#{updateTime},#{finishTime})
	</insert>

	<!-- 根据主键，删除数据
	<delete id="deleteById" parameterType="Map">
		DELETE FROM mz_order.mz_third_express_base WHERE express_id=#{param1}
	</delete>
	 -->

	<!-- 更新 -->
	<update id="update" parameterType="com.mazing.services.order.express.entry.ThirdExpressBasePO">
		update mz_order.mz_third_express_base set order_id=#{orderId},order_no=#{orderNo},third_order_no=#{thirdOrderNo},express_code=#{expressCode},uid=#{uid},store_id=#{storeId},express_status=#{expressStatus},total_fee=#{totalFee},actual_fee=#{actualFee},total_delivery_fee=#{totalDeliveryFee},currency_type=#{currencyType},update_time=#{updateTime},finish_time=#{finishTime} where express_id=#{expressId}
	</update>

	<!-- 根据主键读取记录（主键可能有多个） -->
	<select id="getById" parameterType="Map" resultType="com.mazing.services.order.express.entry.ThirdExpressBasePO">
		SELECT * FROM mz_order.mz_third_express_base WHERE express_id=#{param1}
	</select>

	<!-- 查询全部记录 -->
	<select id="listAll" resultType="com.mazing.services.order.express.entry.ThirdExpressBasePO">
		SELECT * FROM mz_order.mz_third_express_base
	</select>
	
	<select id="listByOrderId" parameterType="Map" resultType="com.mazing.services.order.express.entry.ThirdExpressBasePO">
		SELECT * FROM mz_order.mz_third_express_base where order_id=#{orderId} and express_status IN(
			<foreach collection="expressStatus" item="item" index="index" separator="," >
				#{item}
			</foreach>
		) order by create_time desc
	</select>
	
	<update id="updateExpressStatusById" parameterType="Map">
		update mz_order.mz_third_express_base set express_status=#{newExpressStatus}, update_time=#{updateTime} where express_id=#{expressId}
		and express_status=#{oldExpressStatus} 
	</update>
	
	<!-- 根据id更新顺丰配送信息状态、更新时间、完成时间 -->
	<update id="updateThirdExpressStatusById" parameterType="Map">
		update mz_order.mz_third_express_base set express_status=#{expressStatus}, update_time=#{updateTime}
		<if test="finishTime != null">
			,finish_time=#{finishTime}
		</if>
		where express_id=#{expressId}
	</update>
	
	<update id="updateExpressStatusAndThirdOrder" parameterType="Map">
		update mz_order.mz_third_express_base set express_status=#{newExpressStatus}, third_order_no=#{thirdOrderNo}, update_time=#{updateTime} where express_id=#{expressId}
		and express_status=#{oldExpressStatus} 
	</update>
	
	<select id="listByOrderIds" resultType="com.mazing.services.order.express.entry.ThirdExpressBasePO">
		SELECT * FROM mz_order.mz_third_express_base where order_id IN(
			<foreach collection="orderIds" item="item" index="index" separator="," >
				#{item}
			</foreach>
		) order by create_time asc
	</select>

</mapper>
