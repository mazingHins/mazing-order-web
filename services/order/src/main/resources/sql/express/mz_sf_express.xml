<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<!-- 这里namespace必须是接口的路径，不然要运行的时候要报错 “is not known to the MapperRegistry” -->
<mapper namespace="com.mazing.services.order.express.dao.SfExpressDao">

	<!-- 新增 -->
	<insert id="save" parameterType="com.mazing.services.order.express.entry.SfExpressPO" useGeneratedKeys="false" >
		insert into mz_order.mz_sf_express (express_id,order_id,order_no,third_order_no,sf_order_state,uid,store_id,delivery_emp_name,delivery_phone,delivery_time,express_v_id,currency_type,total_delivery_fee,user_delivery_fee,store_delivery_fee,mz_delivery_fee,express_need_fee,delivery_remark,order_category,total_qty,total_weight,total_volume,express_status,user_lat,user_lng,user_province,user_city,user_district,user_address,user_contacts,user_phone,store_name,store_code,store_lat,store_lng,store_province,store_city,store_district,store_address,store_contacts,store_phone,create_time,update_time,third_create_time,finish_time) values (#{expressId},#{orderId},#{orderNo},#{thirdOrderNo},#{sfOrderState},#{uid},#{storeId},#{deliveryEmpName},#{deliveryPhone},#{deliveryTime},#{expressVId},#{currencyType},#{totalDeliveryFee},#{userDeliveryFee},#{storeDeliveryFee},#{mzDeliveryFee},#{expressNeedFee},#{deliveryRemark},#{orderCategory},#{totalQty},#{totalWeight},#{totalVolume},#{expressStatus},#{userLat},#{userLng},#{userProvince},#{userCity},#{userDistrict},#{userAddress},#{userContacts},#{userPhone},#{storeName},#{storeCode},#{storeLat},#{storeLng},#{storeProvince},#{storeCity},#{storeDistrict},#{storeAddress},#{storeContacts},#{storePhone},#{createTime},#{updateTime},#{thirdCreateTime},#{finishTime})
	</insert>

	<!-- 根据主键，删除数据
	<delete id="deleteById" parameterType="Map">
		DELETE FROM mz_order.mz_sf_express WHERE express_id=#{param1}
	</delete>
	 -->

	<!-- 更新 -->
	<update id="update" parameterType="com.mazing.services.order.express.entry.SfExpressPO">
		update mz_order.mz_sf_express set order_id=#{orderId},order_no=#{orderNo},third_order_no=#{thirdOrderNo},sf_order_state=#{sfOrderState},uid=#{uid},store_id=#{storeId},delivery_emp_name=#{deliveryEmpName},delivery_phone=#{deliveryPhone},delivery_time=#{deliveryTime},express_v_id=#{expressVId},currency_type=#{currencyType},total_delivery_fee=#{totalDeliveryFee},user_delivery_fee=#{userDeliveryFee},store_delivery_fee=#{storeDeliveryFee},mz_delivery_fee=#{mzDeliveryFee},express_need_fee=#{expressNeedFee},delivery_remark=#{deliveryRemark},order_category=#{orderCategory},total_qty=#{totalQty},total_weight=#{totalWeight},total_volume=#{totalVolume},express_status=#{expressStatus},user_lat=#{userLat},user_lng=#{userLng},user_province=#{userProvince},user_city=#{userCity},user_district=#{userDistrict},user_address=#{userAddress},user_contacts=#{userContacts},user_phone=#{userPhone},store_name=#{storeName},store_code=#{storeCode},store_lat=#{storeLat},store_lng=#{storeLng},store_province=#{storeProvince},store_city=#{storeCity},store_district=#{storeDistrict},store_address=#{storeAddress},store_contacts=#{storeContacts},store_phone=#{storePhone},update_time=#{updateTime},third_create_time=#{thirdCreateTime},finish_time=#{finishTime} where express_id=#{expressId}
	</update>

	<!-- 根据主键读取记录（主键可能有多个） -->
	<select id="getById" parameterType="Map" resultType="com.mazing.services.order.express.entry.SfExpressPO">
		SELECT * FROM mz_order.mz_sf_express WHERE express_id=#{param1}
	</select>

	<!-- 查询全部记录 -->
	<select id="listAll" resultType="com.mazing.services.order.express.entry.SfExpressPO">
		SELECT * FROM mz_order.mz_sf_express
	</select>
	
	<update id="updateExpressToCancel" parameterType="Map">
		update mz_order.mz_sf_express set express_status=#{newExpressStatus}, 
		<if test="userDeliveryFee != null">
			user_delivery_fee=#{userDeliveryFee},
		</if>
		<if test="storeDeliveryFee != null">
			store_delivery_fee=#{storeDeliveryFee}, 
		</if>
		<if test="mzDeliveryFee != null">
			mz_delivery_fee=#{mzDeliveryFee}, 
		</if>
		<if test="deliveryRemark != null">
			delivery_remark=#{deliveryRemark}, 
		</if>
		update_time=#{updateTime} where express_id=#{expressId}
		and express_status=#{oldExpressStatus} 
	</update>
	
	<update id="updateExpressStatusById" parameterType="Map">
		update mz_order.mz_sf_express set express_status=#{newExpressStatus}, 
		update_time=#{updateTime} where express_id=#{expressId}
		and express_status=#{oldExpressStatus} 
	</update>

	<!-- 根据id更新顺丰配送信息状态、更新时间、完成时间 -->
	<update id="updateSfExpressStatusById" parameterType="Map">
		update mz_order.mz_sf_express set express_status=#{expressStatus}, update_time=#{updateTime}
		<if test="finishTime != null">
			,finish_time=#{finishTime}
		</if>
		where express_id=#{expressId}
	</update>
	
	<update id="updateExpressStatusAndThirdOrder" parameterType="Map">
		update mz_order.mz_sf_express set express_status=#{newExpressStatus}, third_order_no=#{thirdOrderNo}, update_time=#{updateTime}, third_create_time=#{thirdCreateTime} 
		where express_id=#{expressId} and express_status=#{oldExpressStatus} 
	</update>
	
	<select id="listByThirdCreateTime" parameterType="Map" resultType="com.mazing.services.order.express.entry.SfExpressPO">
		SELECT * FROM mz_order.mz_sf_express where third_create_time between #{beginTime} and #{endTime} and express_status=#{expressStatus} 
	</select>
	
	<select id="stateUserDeliveryFeeByOrderIds" parameterType="Map" resultType="java.lang.Long">
		select IFNULL(SUM(user_delivery_fee),0) from mz_order.mz_sf_express as s, mz_order.mz_order as o
		where s.order_id=o.order_id
		AND s.order_id IN (
			<foreach collection="orderIds" item="item" index="index" separator=",">
				#{item}
			</foreach>)
	</select>
</mapper>
